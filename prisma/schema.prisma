generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Dopowerup {
  txid       String  @id
  receiver   String
  payer      String
  cpu_frac   BigInt
  net_frac   BigInt
  time       BigInt
  failed     Boolean
  reversible Boolean
  userId     String?
  User       User?   @relation(fields: [userId], references: [id])

  @@index([payer], map: "Dopowerup.payer_index")
  @@index([receiver], map: "Dopowerup.receiver_index")
  @@index([time], map: "Dopowerup.time_index")
}

model User {
  id             String      @id @default(cuid())
  telegramId     BigInt?     @unique(map: "User.telegramId_unique")
  telegramHandle String?     @unique(map: "User.telegramHandle_unique")
  eosAccount     String?     @unique(map: "User.eosAccount_unique")
  discordId      String?     @unique(map: "User.discordId_unique")
  discordHandle  String?
  email          String?     @unique(map: "User.email_unique")
  freePowerups   Dopowerup[]
}

model Cursor {
  searchString String @id
  cursor       String
  lowBlock     BigInt

  @@index([lowBlock], map: "Cursor.lowBlock_index")
  @@index([searchString], map: "Cursor.searchString_index")
}

model ipblacklist {
  ip     String @id
  reason String

  @@index([reason], map: "ipblacklist.reason_index")
}

model blacklist {
  account String @id
  reason  String

  @@index([reason], map: "blacklist.reason_index")
}

model Logpowerup {
  seq             BigInt @id
  txid            String
  action          String
  cost            Float
  fee             Float
  received_cpu_ms Float
  received_net_kb Float
  receiver        String
  payer           String
  total_billed    Float
  blockTime       BigInt

  @@index([action], map: "Logpowerup.action_index")
  @@index([blockTime], map: "Logpowerup.blockTime_index")
  @@index([cost], map: "Logpowerup.cost_index")
  @@index([fee], map: "Logpowerup.fee_index")
  @@index([payer], map: "Logpowerup.payer_index")
  @@index([receiver], map: "Logpowerup.receiver_index")
}

model Logbuyram {
  seq             BigInt @id
  txid            String
  action          String
  cost            Float
  fee             Float
  received_ram_kb Float
  receiver        String
  payer           String
  total_billed    Float
  blockTime       BigInt

  @@index([action], map: "Logbuyram.action_index")
  @@index([blockTime], map: "Logbuyram.blockTime_index")
  @@index([cost], map: "Logbuyram.cost_index")
  @@index([fee], map: "Logbuyram.fee_index")
  @@index([payer], map: "Logbuyram.payer_index")
  @@index([receiver], map: "Logbuyram.receiver_index")
}

model Transfer {
  seq       BigInt @id
  from      String
  to        String
  quantity  Float
  memo      String
  symbol    String
  txid      String
  blockTime BigInt

  @@index([blockTime], map: "Transfer.blockTime_index")
  @@index([from], map: "Transfer.from_index")
  @@index([seq], map: "Transfer.seq_index")
  @@index([symbol], map: "Transfer.symbol_index")
  @@index([to], map: "Transfer.to_index")
}

model Stats {
  id                   String @id @default(cuid())
  owners               BigInt
  totalWatched         BigInt
  totalDeposited       Float
  internalEOSBal       Float  @default(0)
  eosBal               Float  @default(0)
  autopowerups24hr     Int    @default(0)
  autopowerupCost24hr  Float  @default(0)
  autobuyram24hr       Int    @default(0)
  autopowerupfees24hr  Float  @default(0)
  autobuyramfees24hr   Float  @default(0)
  autobuyramCost24hr   Float  @default(0)
  registeredUsersTotal Int    @default(0)
  activeTgUsers        Int    @default(0)
  activeDiscordUsers   Int    @default(0)
  freePowerups24hr     Int    @default(0)
  freePowerupsCost24hr Float  @default(0)
  createdAt            BigInt
  rpcErrorStats        String @default("")

  @@index([createdAt], map: "Stats.createdAt_index")
}

model rpcErrors {
  id       String @id @default(cuid())
  time     BigInt
  endpoint String
  error    String

  @@index([endpoint], map: "rpcErrors.endpoint_index")
  @@index([error], map: "rpcErrors.error_index")
  @@index([time], map: "rpcErrors.time_index")
}

model rpcSuccess {
  id       String @id @default(cuid())
  time     BigInt
  endpoint String
  error    String

  @@index([endpoint], map: "rpcSuccess.endpoint_index")
  @@index([error], map: "rpcSuccess.error_index")
  @@index([time], map: "rpcSuccess.time_index")
}
